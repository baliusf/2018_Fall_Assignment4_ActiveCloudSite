@model List<IEXTrading.Models.Quote>

@{
    ViewData["Title"] = "Index";
}

<h2>IEX Trading Application</h2>
<hr />
<div>
    <p>
        This application let's you fetch trading data from IEX via their public <a href="https://iextrading.com/developer/">API</a>.
        <br />
        <br />
        The <a asp-area="" asp-controller="Home" asp-action="Symbols">Symbols</a> tab fetches symbols data from the
        <a href="https://iextrading.com/developer/docs/#reference-data">IEX Reference API </a> and displays the results.
        This data can also be saved in the local database.
        <br />
        The <a asp-area="" asp-controller="Home" asp-action="Quote">Quote</a> tab let's you select a Company(symbol) and fetches a quote from
        <a href="https://iextrading.com/developer/docs/#stocks">IEX Stock API</a>.
        The quote can also be saved in the local database.
        <br />
        The <a asp-area="" asp-controller="Home" asp-action="Refresh">Refresh</a> tab let's you refresh the local database, that is, remove all its contents.
    </p>
    <p>
        Following learning objectives are fulfilled -
        <ul>
            <li>Connection to REST API.</li>
            <li>Connection to database.</li>
            <li>CRUD operations.</li>
        </ul>
    </p>
</div>
<hr />

@if (Model.Count > 0) {
    <h1>Last Saved Quotes</h1>
    <hr />
<table class="table">
    <thead>
        <tr>
            <th>
                Company Name
            </th>
            <th>
                Primary Exchange
            </th>
            <th>
                Sector
            </th>
            <th>
                Open
            </th>
            <th>
                Close
            </th>
            <th>
                High
            </th>
            <th>
                Low
            </th>
            <th>
                Change%
            </th>
            <th>
                Avg Total Volume
            </th>
            <th>
                Week52 High
            </th>
            <th>
                Week52 Low
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var quote in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => quote.companyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.primaryExchange)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.sector)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.open)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.close)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.high)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.low)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.changePercent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.avgTotalVolume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.week52High)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quote.week52Low)
                </td>
            </tr>
        }
    </tbody>
</table>
}
